name: Build APK with Buildozer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential ccache libffi-dev libssl-dev \
          libsqlite3-dev libjpeg-dev zlib1g-dev \
          unzip openjdk-17-jdk \
          python3-pip python3-virtualenv wget


    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android SDK + AIDL
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
        unzip tools.zip -d latest
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0"

    - name: Create buildozer.spec if missing
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK
      env:
        ANDROID_HOME: ${{ github.workspace }}/android-sdk
        PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ env.PATH }}
      run: buildozer android debug

    - name: Upload APK to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: myapp-apk
        path: bin/*.apk
