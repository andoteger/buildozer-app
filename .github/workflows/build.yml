name: Build APK with Buildozer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 🔧 Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential ccache libffi-dev libssl-dev \
          libsqlite3-dev libjpeg-dev zlib1g-dev \
          python3-pip python3-virtualenv

    - name: ⚙️ Setup Android Tools
      run: |
        # Accept licenses first
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # Install specific versions (critical for AIDL)
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.0" \
          "cmdline-tools;latest"

        # Verify AIDL exists
        ls $ANDROID_SDK_ROOT/build-tools/33.0.0/aidl
        echo "✅ AIDL path: $ANDROID_SDK_ROOT/build-tools/33.0.0/aidl"

    - name: 📦 Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: 🏗️ Build APK
      run: |
        # Initialize if needed
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

        # Explicitly set paths in spec file
        echo "
        android.sdk_path = $ANDROID_SDK_ROOT
        android.ndk_path = $ANDROID_SDK_ROOT/ndk/25.1.8937393
        " >> buildozer.spec

        buildozer -v android debug

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: bin/*.apk
