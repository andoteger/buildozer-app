name: Build APK dengan Buildozer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout kode
        uses: actions/checkout@v3
      
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependensi sistem
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          libffi-dev \
          libssl-dev \
          build-essential \
          curl \
          ccache \
          ninja-build \
          lld \
          libxml2-dev \
          libxslt-dev

      - name: Install dependensi Python
        run: |
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install buildozer
          echo "~/.local/bin" >> $GITHUB_PATH

      - name: Setup Android SDK dan NDK (Clean Install)
        run: |
          # Setup environment variables
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          
          # Clean existing cmdline-tools
          rm -rf /usr/local/lib/android/sdk/cmdline-tools/latest/*
          
          # Download and install latest command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools/* /usr/local/lib/android/sdk/cmdline-tools/latest/
          rm -rf cmdline-tools commandlinetools-linux-*.zip
          
          # Add to PATH
          echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
          
          # Accept licenses
          yes | sdkmanager --licenses
          
          # Install required components
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"
          
          # Install specific NDK version
          sdkmanager "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Konfigurasi Buildozer
        run: |
          buildozer init
          # Update buildozer.spec
          sed -i "s/^android.ndk = .*/android.ndk = 25.2.9519653/" buildozer.spec
          sed -i "s/^android.sdk = .*/android.sdk = 31/" buildozer.spec
          sed -i "s/^android.ndk_path = .*/android.ndk_path = \/usr\/local\/lib\/android\/sdk\/ndk\/25.2.9519653/" buildozer.spec
          sed -i "s/^android.sdk_path = .*/android.sdk_path = \/usr\/local\/lib\/android\/sdk/" buildozer.spec
          sed -i "s/^#android.accept_sdk_license = .*/android.accept_sdk_license = True/" buildozer.spec
          sed -i "s/^requirements = .*/requirements = python3,kivy/" buildozer.spec

      - name: Build APK
        run: |
          buildozer -v android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
          retention-days: 1
