name: Build APK with Buildozer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies (dengan git)
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git wget zip unzip \
          build-essential ccache libffi-dev libssl-dev \
          libsqlite3-dev libjpeg-dev zlib1g-dev \
          openjdk-17-jdk python3-pip python3-virtualenv

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android SDK + AIDL
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
        unzip tools.zip
        mv cmdline-tools tools
        mv tools latest
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
        sdkmanager --sdk_root=$ANDROID_HOME \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0"


    - name: Create buildozer.spec if missing
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK
      env:
        ANDROID_HOME: $HOME/android-sdk
        PATH: $HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH
      run: |
        echo "Git location:" $(which git)
        git --version
        buildozer android debug


    - name: Upload APK to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: myapp-apk
        path: bin/*.apk
